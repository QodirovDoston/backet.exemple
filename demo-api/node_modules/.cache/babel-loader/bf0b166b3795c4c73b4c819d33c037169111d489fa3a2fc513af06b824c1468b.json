{"ast":null,"code":"var _jsxFileName = \"/home/doston/Desktop/demo-api/src/components/Form/Form.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormData() {\n  _s();\n  const [name, setName] = useState();\n  const [age, setAge] = useState();\n  const PostData = async () => {\n    const url = \"http://localhost:3000/data\";\n    const obj = {\n      name: name,\n      age: age\n    };\n    await postData(url, obj).then(res => {\n      if (res.status === 201) {\n        alert(res.statusText);\n        setAge(\"\");\n        setName(\"\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: name,\n              placeholder: \"Enter email\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: age,\n              placeholder: \"Password\",\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: PostData,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(FormData, \"DEQpNvDhEYoy+kaKRGmJYbvwxL8=\");\n_c = FormData;\nfunction getDataAll() {\n  _s2();\n  const getDataAll = async () => {\n    const url = \"http://jsonplaceholder.typicode.com/users\";\n    let res = await getData(url);\n    console.log(res);\n  };\n  useEffect(() => {\n    getDataAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s2(getDataAll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default (FormData, getDataAll);\nvar _c;\n$RefreshReg$(_c, \"FormData\");","map":{"version":3,"names":["React","FormData","name","setName","useState","age","setAge","PostData","url","obj","postData","then","res","status","alert","statusText","e","target","value","getDataAll","getData","console","log","useEffect"],"sources":["/home/doston/Desktop/demo-api/src/components/Form/Form.jsx"],"sourcesContent":["import React from \"react\"\n\n function FormData() {\n    const [name, setName] = useState()\n    const [age, setAge] = useState()\n    const PostData = async () => {\n        const url = \"http://localhost:3000/data\"\n        const obj = {\n            name: name,\n            age: age}\n        await postData(url, obj).then((res) => {\n            if(res.status === 201){\n                alert(res.statusText)\n                setAge(\"\")\n                setName(\"\")\n            }})}\n    return (\n        <Container>\n            <Row className='justify-content-center mt-5'>\n                <Col xs={5}>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"email\" value={name} placeholder=\"Enter email\" onChange={(e) => setName(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control type=\"text\"  value={age} placeholder=\"Password\" onChange={(e) => setAge(e.target.value)} />\n                        </Form.Group>\n                        <Button variant=\"primary\" onClick={PostData}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nfunction getDataAll() {\n          const getDataAll = async () => {\n        const url = \"http://jsonplaceholder.typicode.com/users\"\n         let res = await getData(url)\n         console.log(res)\n      }\n      useEffect(() => {\n        getDataAll()\n    }, [])\n  return (\n    <>\n    </>\n  )\n}\nexport default (FormData, getDataAll)"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAExB,SAASC,QAAQ,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,EAAE;EAClC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGF,QAAQ,EAAE;EAChC,MAAMG,QAAQ,GAAG,YAAY;IACzB,MAAMC,GAAG,GAAG,4BAA4B;IACxC,MAAMC,GAAG,GAAG;MACRP,IAAI,EAAEA,IAAI;MACVG,GAAG,EAAEA;IAAG,CAAC;IACb,MAAMK,QAAQ,CAACF,GAAG,EAAEC,GAAG,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACnC,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAC;QAClBC,KAAK,CAACF,GAAG,CAACG,UAAU,CAAC;QACrBT,MAAM,CAAC,EAAE,CAAC;QACVH,OAAO,CAAC,EAAE,CAAC;MACf;IAAC,CAAC,CAAC;EAAA,CAAC;EACZ,oBACI,QAAC,SAAS;IAAA,uBACN,QAAC,GAAG;MAAC,SAAS,EAAC,6BAA6B;MAAA,uBACxC,QAAC,GAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACP,QAAC,IAAI;UAAA,wBACD,QAAC,IAAI,CAAC,KAAK;YAAC,SAAS,EAAC,MAAM;YAAC,SAAS,EAAC,gBAAgB;YAAA,wBACnD,QAAC,IAAI,CAAC,KAAK;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAa,eAC7B,QAAC,IAAI,CAAC,OAAO;cAAC,IAAI,EAAC,OAAO;cAAC,KAAK,EAAED,IAAK;cAAC,WAAW,EAAC,aAAa;cAAC,QAAQ,EAAGc,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACrG,eACb,QAAC,IAAI,CAAC,KAAK;YAAC,SAAS,EAAC,MAAM;YAAC,SAAS,EAAC,mBAAmB;YAAA,wBACtD,QAAC,IAAI,CAAC,KAAK;cAAA,UAAC;YAAG;cAAA;cAAA;cAAA;YAAA,QAAa,eAC5B,QAAC,IAAI,CAAC,OAAO;cAAC,IAAI,EAAC,MAAM;cAAE,KAAK,EAAEb,GAAI;cAAC,WAAW,EAAC,UAAU;cAAC,QAAQ,EAAGW,CAAC,IAAKV,MAAM,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAChG,eACb,QAAC,MAAM;YAAC,OAAO,EAAC,SAAS;YAAC,OAAO,EAAEX,QAAS;YAAA,UAAC;UAE7C;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACE;AAEpB;AAAC,GAnCSN,QAAQ;AAAA,KAARA,QAAQ;AAqClB,SAASkB,UAAU,GAAG;EAAA;EACZ,MAAMA,UAAU,GAAG,YAAY;IACjC,MAAMX,GAAG,GAAG,2CAA2C;IACtD,IAAII,GAAG,GAAG,MAAMQ,OAAO,CAACZ,GAAG,CAAC;IAC5Ba,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;EACnB,CAAC;EACDW,SAAS,CAAC,MAAM;IACdJ,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EACR,oBACE,qCACG;AAEP;AAAC,IAbQA,UAAU;AAcnB,gBAAgBlB,QAAQ,EAAEkB,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}